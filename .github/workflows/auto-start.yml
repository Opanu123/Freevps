name: Minecraft VPS Auto Start with Dropbox Backup & Discord Notify

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup tmate SSH session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: false
      env:
        PLAYIT_CLAIM_CODE: ${{ secrets.PLAYIT_CLAIM_CODE }}

    - name: Send SSH session to Discord
      run: |
        echo "Fetching tmate SSH..."
        echo "SSH Info: ssh session is being created" > ssh.txt
        sleep 30
        echo "Sending SSH to Discord..."
        curl -X POST -H "Content-Type: application/json" \
        -d "{\"content\": \"ðŸŸ¢ **SSH Active! Connect using:** \`ssh $(cat /tmp/tmate.sock | grep ssh)\`\"}" \
        ${{ secrets.DISCORD_WEBHOOK }}

    - name: Install Java & Setup Server
      run: |
        sudo apt update && sudo apt install -y openjdk-17-jre unzip wget curl
        mkdir -p minecraft/plugins
        wget -O server.jar https://api.papermc.io/v2/projects/paper/versions/1.20.1/builds/196/downloads/paper-1.20.1-196.jar
        echo "eula=true" > eula.txt

    - name: Install Playit
      run: |
        wget https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64 -O playit
        chmod +x playit
        nohup ./playit &

    - name: Install Dropbox Uploader
      run: |
        git clone https://github.com/andreafabrizi/Dropbox-Uploader.git
        cd Dropbox-Uploader
        chmod +x dropbox_uploader.sh
        echo "${{ secrets.DROPBOX_ACCESS }}" > token.txt
        ./dropbox_uploader.sh info || echo "Dropbox linked"

    - name: Download Plugins from Dropbox
      run: |
        cd minecraft/plugins
        ../../Dropbox-Uploader/dropbox_uploader.sh download /plugins/ ./ || echo "No plugins found"
        cd ../..

    - name: Start Minecraft Server
      run: |
        java -Xmx2G -Xms1G -jar server.jar nogui &
        sleep 300

    - name: Backup World to Dropbox
      run: |
        tar -czf world_backup.tar.gz world/
        ./Dropbox-Uploader/dropbox_uploader.sh upload world_backup.tar.gz /backups/world_$(date +%Y%m%d_%H%M%S).tar.gz

    - name: Notify Discord Backup Done
      run: |
        curl -X POST -H "Content-Type: application/json" \
        -d "{\"content\": \"ðŸ’¾ World backup uploaded to Dropbox successfully!\"}" \
        ${{ secrets.DISCORD_WEBHOOK }}
